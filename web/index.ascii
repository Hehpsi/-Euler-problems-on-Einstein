= Project Euler

****
https://projecteuler.net/[Project Euler] is a database of computer
programming problems...
****

[quote,Project Euler]
____
Project Euler is a series of challenging mathematical/computer programming
problems...

[The problems are for] students for whom the basic curriculum is not feeding their hunger to learn...
____

****
This is a database of _Einstein_ tasks for the _Euler_ programming problems.

Here, you can:

- tackle the programming problems, below, and upload them to link:/einstein/[_Einstein_],
- or _contribute your own markers_ for the _Euler_ problems (see below).
****

// //////////////////////////////////////////////////////////////
== Contributing

****
Contributions of markers for new _Euler_ problems are _very welcome_.

This project is hosted on GitLab, here: https://gitlab.computing.dcu.ie/sblott/euler[].

To contribute a new marker/problem:

. clone and fork the GitLab project above,
. create a git branch for your contribution,
. write your marker:
** copy an existing marker (see the `problems` directory in the repo),
** there's information on how to write _Einstein_ markers link:/einstein/help#_markers[here],
. submit a merge request (MR) on GitLab +
  (you should email SB, too, otherwise I probably won't see your MR).
****

****
The absolute minimum for a new task/marker is:

- an exemplar (your solution to the problem),
- `stdout.txt` (the expected output), and
- `task-description.ascii` (a description of the task with example command line arguments, input, output). +
  (The format is https://asciidoctor.org/[asciidoc]; asciidoc is like grown-up markdown.)

You can choose python, if that's your preference, or you can choose
a different language.  Ask SB.

For input, you can:

- write a "runner" script (like
  https://gitlab.computing.dcu.ie/sblott/euler/-/blob/main/problems/euler-1-multiples-of-3-or-5.py/runner.zsh[this one]),
- use command-line arguments (filename: `argv.txt`), or
- use standard input (filename: `stdin.txt`).

Ask SB if you need more information.
****

// //////////////////////////////////////////////////////////////
== Euler problems

// //////////////////////////////////////////////////////////////
=== Euler 1

++++
<div class="task" task="euler-1-multiples-of-3-or-5.py"></div>
++++

// //////////////////////////////////////////////////////////////
//
include::misc/instrument.txt[]
include::misc/asciimath.txt[]

////
vim: ft=asciidoc
////
